/* effects.module.css - Cleaned version without redundant variants */

/* Scan Line Effect - Now uses CSS custom properties for dynamic colors */
.ks-hud-scan-line {
  position: relative;
  overflow: hidden;
}

.ks-hud-scan-line::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  opacity: 0;
  pointer-events: none;
  z-index: 1;
  transition: opacity 0.2s ease;
  /* Use CSS custom property for dynamic color */
  background: linear-gradient(
    90deg,
    transparent,
    var(--ks-effect-color, rgba(201, 169, 97, 0.4)),
    transparent
  );
}

.ks-hud-scan-line:hover::before {
  left: 100%;
  opacity: 1;
  transition: all 0.8s ease;
}

/* Clip Path Effects - These stay the same */
.ks-hud-clip-top-left-bottom-right {
  clip-path: polygon(
    6px 0, 
    100% 0, 
    100% calc(100% - 6px), 
    calc(100% - 6px) 100%, 
    0 100%, 
    0 6px
  );
  border: none !important;
  border-radius: 0 !important;
}

.ks-hud-clip-top-right-bottom-left {
  clip-path: polygon(
    0 0, 
    calc(100% - 6px) 0, 
    100% 6px, 
    100% 100%, 
    6px 100%, 
    0 calc(100% - 6px)
  );
  border: none !important;
  border-radius: 0 !important;
}

.ks-hud-clip-minimal-top-left-bottom-right {
  clip-path: polygon(
    4px 0, 
    100% 0, 
    100% calc(100% - 4px), 
    calc(100% - 4px) 100%, 
    0 100%, 
    0 4px
  );
  border: none !important;
  border-radius: 0 !important;
}

.ks-hud-clip-minimal-top-right-bottom-left {
  clip-path: polygon(
    0 0, 
    calc(100% - 4px) 0, 
    100% 4px, 
    100% 100%, 
    4px 100%, 
    0 calc(100% - 4px)
  );
  border: none !important;
  border-radius: 0 !important;
}

/* Inset clip effect using CSS custom properties */
.ks-hud-clip-inset-top-left-bottom-right {
  position: relative;
  border: none !important;
  background: transparent !important;
  overflow: hidden;
  transform: none !important;
}

.ks-hud-clip-inset-top-left-bottom-right:hover,
.ks-hud-clip-inset-top-left-bottom-right:focus,
.ks-hud-clip-inset-top-left-bottom-right:active {
  transform: none !important;
}

.ks-hud-clip-inset-top-left-bottom-right::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  clip-path: polygon(
    4px 0, 
    100% 0, 
    100% calc(100% - 4px), 
    calc(100% - 4px) 100%, 
    0 100%, 
    0 4px
  );
  background: var(--ks-effect-bg, rgba(201, 169, 97, 0.1));
  border: 1px solid var(--ks-effect-border, rgba(201, 169, 97, 0.4));
  z-index: -1;
  pointer-events: none;
  box-sizing: border-box;
}

.ks-hud-clip-inset-top-left-bottom-right:hover::before {
  background: var(--ks-effect-bg-hover, rgba(201, 169, 97, 0.2));
  border-color: var(--ks-effect-border-hover, rgba(201, 169, 97, 0.6));
}

.ks-hud-clip-inset-top-left-bottom-right > * {
  position: relative;
  z-index: 2;
}

/* Glow Effect using CSS custom properties */
.ks-hud-glow {
  transition: box-shadow 0.2s ease;
  box-shadow: 0 0 8px var(--ks-effect-glow, rgba(201, 169, 97, 0.3));
}

.ks-hud-glow:hover:not(:disabled) {
  box-shadow: 0 0 15px var(--ks-effect-glow-hover, rgba(201, 169, 97, 0.5));
}

/* Pulse Effect using CSS custom properties */
.ks-hud-pulse {
  animation: ksHudPulse 2s infinite ease-in-out;
}

@keyframes ksHudPulse {
  0%, 100% {
    background-color: var(--ks-effect-pulse-bg, rgba(201, 169, 97, 0.1));
    box-shadow: 0 0 5px var(--ks-effect-pulse-glow, rgba(201, 169, 97, 0.2));
  }
  50% {
    background-color: var(--ks-effect-pulse-bg-mid, rgba(201, 169, 97, 0.2));
    box-shadow: 0 0 10px var(--ks-effect-pulse-glow-mid, rgba(201, 169, 97, 0.4));
  }
}

/* Interactive effect for non-ripple buttons */
.ks-interactive {
  transition: all 0.15s ease;
}

.ks-interactive:active:not(:disabled) {
  transform: scale(0.97);
  opacity: 0.8;
}

.ks-interactive:hover:not(:disabled) {
  transform: scale(1.02);
}